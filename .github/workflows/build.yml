name: Build and Publish Container

on:
  push:
    branches: [ main ]
    paths:
      - 'addons/snapcast-multiout/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'addons/snapcast-multiout/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: damianflynn/snapcast-multiout

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from config.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' addons/snapcast-multiout/config.yaml | sed 's/version: *"\?\([^"]*\)"\?.*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.version.outputs.VERSION }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push AMD64
        uses: docker/build-push-action@v5
        with:
          context: ./addons/snapcast-multiout
          file: ./addons/snapcast-multiout/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}-amd64
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=docker.io/library/alpine:3.19

      - name: Build and push ARM64
        uses: docker/build-push-action@v5
        with:
          context: ./addons/snapcast-multiout
          file: ./addons/snapcast-multiout/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}-aarch64
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=docker.io/library/alpine:3.19

      - name: Create and push multi-arch manifest
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          
          # Create manifest for version tag
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION-aarch64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
          
          # Create manifest for latest tag (only on main branch)
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION-aarch64
            docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi